{
  "openapi": "3.0.2",
  "info": {
    "title": "JOJ Horse",
    "description": "Git version: cd3eddf@2021-12-03T16:26:50Z",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Redirect To Docs",
        "operationId": "redirect_to_docs__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "summary": "Redirect To Docs",
        "operationId": "redirect_to_docs_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/domains": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domains",
        "description": "List all domains that the current user has a role.",
        "operationId": "list_domains_api_v1_domains_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Role",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "role",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain",
        "operationId": "create_domain_api_v1_domains_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain",
        "operationId": "get_domain_api_v1_domains__domain__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain",
        "description": "TODO: finish this part\n\ntc-imba: delete domain have many side effects, and is not urgent,\n         marked it deprecated and implement it later",
        "operationId": "delete_domain_api_v1_domains__domain__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain",
        "operationId": "update_domain_api_v1_domains__domain__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/transfer": {
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Transfer Domain",
        "operationId": "transfer_domain_api_v1_domains__domain__transfer_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domain Users",
        "operationId": "list_domain_users_api_v1_domains__domain__users_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Add Domain User",
        "operationId": "add_domain_user_api_v1_domains__domain__users_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainUserAdd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users/{user}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain User",
        "operationId": "get_domain_user_api_v1_domains__domain__users__user__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Remove Domain User",
        "operationId": "remove_domain_user_api_v1_domains__domain__users__user__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain User",
        "operationId": "update_domain_user_api_v1_domains__domain__users__user__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainUserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users/{user}/permission": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain User Permission",
        "operationId": "get_domain_user_permission_api_v1_domains__domain__users__user__permission_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserPermissionResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/candidates": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Search Domain Candidates",
        "operationId": "search_domain_candidates_api_v1_domains__domain__candidates_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "search query",
            "required": true,
            "schema": {
              "title": "Query",
              "minLength": 2,
              "type": "string",
              "description": "search query"
            },
            "name": "query",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: username",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: username",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/roles": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domain Roles",
        "operationId": "list_domain_roles_api_v1_domains__domain__roles_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain Role",
        "operationId": "create_domain_role_api_v1_domains__domain__roles_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRoleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/roles/{role}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain Role",
        "operationId": "get_domain_role_api_v1_domains__domain__roles__role__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "name of the domain role",
            "required": true,
            "schema": {
              "title": "Role",
              "maxLength": 256,
              "minLength": 1,
              "type": "string",
              "description": "name of the domain role"
            },
            "name": "role",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain Role",
        "operationId": "delete_domain_role_api_v1_domains__domain__roles__role__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "name of the domain role",
            "required": true,
            "schema": {
              "title": "Role",
              "maxLength": 256,
              "minLength": 1,
              "type": "string",
              "description": "name of the domain role"
            },
            "name": "role",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain Role",
        "operationId": "update_domain_role_api_v1_domains__domain__roles__role__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "name of the domain role",
            "required": true,
            "schema": {
              "title": "Role",
              "maxLength": 256,
              "minLength": 1,
              "type": "string",
              "description": "name of the domain role"
            },
            "name": "role",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRoleEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/invitations": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domain Invitations",
        "operationId": "list_domain_invitations_api_v1_domains__domain__invitations_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain Invitation",
        "operationId": "create_domain_invitation_api_v1_domains__domain__invitations_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainInvitationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/invitations/{invitation}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain Invitation",
        "operationId": "get_domain_invitation_api_v1_domains__domain__invitations__invitation__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the domain invitation",
            "required": true,
            "schema": {
              "title": "Invitation",
              "type": "string",
              "description": "url or id of the domain invitation"
            },
            "name": "invitation",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain Invitation",
        "operationId": "delete_domain_invitation_api_v1_domains__domain__invitations__invitation__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the domain invitation",
            "required": true,
            "schema": {
              "title": "Invitation",
              "type": "string",
              "description": "url or id of the domain invitation"
            },
            "name": "invitation",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain Invitation",
        "operationId": "update_domain_invitation_api_v1_domains__domain__invitations__invitation__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the domain invitation",
            "required": true,
            "schema": {
              "title": "Invitation",
              "type": "string",
              "description": "url or id of the domain invitation"
            },
            "name": "invitation",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainInvitationEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/join": {
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Join Domain By Invitation",
        "operationId": "join_domain_by_invitation_api_v1_domains__domain__join_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Invitationcode",
              "type": "string"
            },
            "name": "invitationCode",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithDomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "List Problem Sets",
        "operationId": "list_problem_sets_api_v1_domains__domain__problem_sets_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem set"
        ],
        "summary": "Create Problem Set",
        "operationId": "create_problem_set_api_v1_domains__domain__problem_sets_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problemSet}": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "Get Problem Set",
        "operationId": "get_problem_set_api_v1_domains__domain__problem_sets__problemSet__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem set"
        ],
        "summary": "Delete Problem Set",
        "operationId": "delete_problem_set_api_v1_domains__domain__problem_sets__problemSet__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "problem set"
        ],
        "summary": "Update Problem Set",
        "operationId": "update_problem_set_api_v1_domains__domain__problem_sets__problemSet__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problemSet}/problems": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "List Problems In Problem Set",
        "operationId": "list_problems_in_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemWithRecordStateListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem set"
        ],
        "summary": "Add Problem In Problem Set",
        "operationId": "add_problem_in_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetAddProblem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problemSet}/problems/{problem}": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "Get Problem In Problem Set",
        "operationId": "get_problem_in_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems__problem__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailWithRecordStateResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem set"
        ],
        "summary": "Delete Problem In Problem Set",
        "operationId": "delete_problem_in_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems__problem__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "problem set"
        ],
        "summary": "Update Problem In Problem Set",
        "operationId": "update_problem_in_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems__problem__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetUpdateProblem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problemSet}/problems/{problem}/submit": {
      "post": {
        "tags": [
          "problem set"
        ],
        "summary": "Submit Solution To Problem Set",
        "operationId": "submit_solution_to_problem_set_api_v1_domains__domain__problem_sets__problemSet__problems__problem__submit_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSolutionSubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problemSet}/scoreboard": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "Get Scoreboard",
        "operationId": "get_scoreboard_api_v1_domains__domain__problem_sets__problemSet__scoreboard_get",
        "parameters": [
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoreBoardResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems": {
      "get": {
        "tags": [
          "problem"
        ],
        "summary": "List Problems",
        "operationId": "list_problems_api_v1_domains__domain__problems_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Create Problem",
        "operationId": "create_problem_api_v1_domains__domain__problems_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}": {
      "get": {
        "tags": [
          "problem"
        ],
        "summary": "Get Problem",
        "operationId": "get_problem_api_v1_domains__domain__problems__problem__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Submit Solution To Problem",
        "operationId": "submit_solution_to_problem_api_v1_domains__domain__problems__problem__post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSolutionSubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem"
        ],
        "summary": "Delete Problem",
        "operationId": "delete_problem_api_v1_domains__domain__problems__problem__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "problem"
        ],
        "summary": "Update Problem",
        "operationId": "update_problem_api_v1_domains__domain__problems__problem__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/clone": {
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Clone Problem",
        "operationId": "clone_problem_api_v1_domains__domain__problems_clone_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemClone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Download Uncommitted Problem Config As Archive",
        "operationId": "download_uncommitted_problem_config_as_archive_api_v1_domains__domain__problems__problem__config_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ArchiveType"
                }
              ],
              "default": "zip"
            },
            "name": "archiveFormat",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "problem config"
        ],
        "summary": "Update Problem Config By Archive",
        "description": "Completely replace the problem config with the archive. This will delete files not included in the archive.",
        "operationId": "update_problem_config_by_archive_api_v1_domains__domain__problems__problem__config_put",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/files/{path}": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Download File In Uncommitted Problem Config",
        "operationId": "download_file_in_uncommitted_problem_config_api_v1_domains__domain__problems__problem__config_files__path__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Download File In Uncommitted Problem Config Api V1 Domains  Domain  Problems  Problem  Config Files  Path  Get"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "problem config"
        ],
        "summary": "Upload File To Problem Config",
        "description": "Replace the file with the same path. Create directories if needed along the path.",
        "operationId": "upload_file_to_problem_config_api_v1_domains__domain__problems__problem__config_files__path__put",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem config"
        ],
        "summary": "Delete File From Uncommitted Problem Config",
        "operationId": "delete_file_from_uncommitted_problem_config_api_v1_domains__domain__problems__problem__config_files__path__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/file_info/{path}": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Get File Or Directory Info In Uncommitted Problem Config",
        "operationId": "get_file_or_directory_info_in_uncommitted_problem_config_api_v1_domains__domain__problems__problem__config_file_info__path__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/files": {
      "put": {
        "tags": [
          "problem config"
        ],
        "summary": "Upload File To Root In Problem Config",
        "description": "Use the filename as path, file will be uploaded to root of the problem config directory.",
        "operationId": "upload_file_to_root_in_problem_config_api_v1_domains__domain__problems__problem__config_files_put",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/dirs/{path}": {
      "delete": {
        "tags": [
          "problem config"
        ],
        "summary": "Delete Directory From Uncommitted Problem Config",
        "operationId": "delete_directory_from_uncommitted_problem_config_api_v1_domains__domain__problems__problem__config_dirs__path__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          },
          {
            "description": "Act as -r in the rm command. If false, only empty directory can be deleted.",
            "required": false,
            "schema": {
              "title": "Recursive",
              "type": "boolean",
              "description": "Act as -r in the rm command. If false, only empty directory can be deleted.",
              "default": false
            },
            "name": "recursive",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileInfoResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/commit": {
      "post": {
        "tags": [
          "problem config"
        ],
        "summary": "Commit Problem Config",
        "description": "Commit all changes through upload / delete as a new problem config version.",
        "operationId": "commit_problem_config_api_v1_domains__domain__problems__problem__config_commit_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemConfigCommit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemConfigResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config/reset": {
      "post": {
        "tags": [
          "problem config"
        ],
        "summary": "Reset Problem Config",
        "operationId": "reset_problem_config_api_v1_domains__domain__problems__problem__config_reset_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LakeFSReset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/configs/{config}": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Get Problem Config Json",
        "operationId": "get_problem_config_json_api_v1_domains__domain__problems__problem__configs__config__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "'latest' or id of the config",
            "required": true,
            "schema": {
              "title": "Config",
              "type": "string",
              "description": "'latest' or id of the config"
            },
            "name": "config",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemConfigResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/configs/{config}/files": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Download Problem Config Archive",
        "operationId": "download_problem_config_archive_api_v1_domains__domain__problems__problem__configs__config__files_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          },
          {
            "description": "'latest' or id of the config",
            "required": true,
            "schema": {
              "title": "Config",
              "type": "string",
              "description": "'latest' or id of the config"
            },
            "name": "config",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ArchiveType"
                }
              ],
              "default": "zip"
            },
            "name": "archiveFormat",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Download Problem Config Archive Api V1 Domains  Domain  Problems  Problem  Configs  Config  Files Get"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/configs/{config}/files/{path}": {
      "get": {
        "tags": [
          "problem config"
        ],
        "summary": "Download File In Problem Config",
        "operationId": "download_file_in_problem_config_api_v1_domains__domain__problems__problem__configs__config__files__path__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Path",
              "type": "string"
            },
            "name": "path",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          },
          {
            "description": "'latest' or id of the config",
            "required": true,
            "schema": {
              "title": "Config",
              "type": "string",
              "description": "'latest' or id of the config"
            },
            "name": "config",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Download File In Problem Config Api V1 Domains  Domain  Problems  Problem  Configs  Config  Files  Path  Get"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/problem_groups": {
      "get": {
        "tags": [
          "problem group"
        ],
        "summary": "List Problem Groups",
        "operationId": "list_problem_groups_api_v1_problem_groups_get",
        "parameters": [
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: Any",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: Any",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemGroupListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/records": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "List Records In Domain",
        "operationId": "list_records_in_domain_api_v1_domains__domain__records_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Problemset",
              "type": "string"
            },
            "name": "problemSet",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Problem",
              "type": "string"
            },
            "name": "problem",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "user id or 'me' or empty",
            "required": false,
            "schema": {
              "title": "Uid",
              "type": "string",
              "description": "user id or 'me' or empty",
              "default": ""
            },
            "name": "uid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/records/{record}": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "Get Record",
        "operationId": "get_record_api_v1_domains__domain__records__record__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/records/{record}/code": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "Get Record Code",
        "operationId": "get_record_code_api_v1_domains__domain__records__record__code_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Code Api V1 Domains  Domain  Records  Record  Code Get"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v1_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/problems": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Problems",
        "operationId": "get_user_problems_api_v1_user_problems_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_v1_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Query",
              "type": "string",
              "default": ""
            },
            "name": "query",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: username",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: username",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v1_users__uid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}/domains": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List User Domains",
        "operationId": "list_user_domains_api_v1_users__uid__domains_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Role",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "role",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}/problems": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Problems",
        "operationId": "get_user_problems_api_v1_users__uid__problems_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_auth_login_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2PasswordRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_api_v1_auth_logout_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Logout Api V1 Auth Logout Post"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_api_v1_auth_register_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Token",
        "operationId": "get_token_api_v1_auth_token_get",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh",
        "operationId": "refresh_api_v1_auth_refresh_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Version",
        "operationId": "version_api_v1_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jwt_decoded": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Jwt Decoded",
        "operationId": "jwt_decoded_api_v1_jwt_decoded_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWTAccessTokenResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/test/report": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Test Error Report",
        "operationId": "test_error_report_api_v1_test_report_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/set_root_user": {
      "post": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Set Root User",
        "operationId": "set_root_user_api_v1_set_root_user_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_v1_admin_users_get",
        "parameters": [
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/domain_roles": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Domain Roles",
        "operationId": "list_domain_roles_api_v1_admin_domain_roles_get",
        "parameters": [
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/judgers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Judgers",
        "operationId": "list_judgers_api_v1_admin_judgers_get",
        "parameters": [
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "minimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/key": {
      "get": {
        "tags": [
          "judge"
        ],
        "summary": "Get Judge Key",
        "operationId": "get_judge_key_api_v1_judge_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKeyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/records/{record}/claim": {
      "post": {
        "tags": [
          "judge"
        ],
        "summary": "Claim Record By Judge",
        "operationId": "claim_record_by_judge_api_v1_judge_records__record__claim_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JudgeClaimResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/records/{record}/state": {
      "post": {
        "tags": [
          "judge"
        ],
        "summary": "Update Record State By Judge",
        "operationId": "update_record_state_by_judge_api_v1_judge_records__record__state_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/judge/records/{record}/judgment": {
      "post": {
        "tags": [
          "judge"
        ],
        "summary": "Submit Record By Judge",
        "operationId": "submit_record_by_judge_api_v1_judge_records__record__judgment_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ArchiveType": {
        "title": "ArchiveType",
        "enum": [
          "zip",
          "tar",
          "unknown"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AuthTokens": {
        "title": "AuthTokens",
        "required": [
          "accessToken",
          "refreshToken",
          "tokenType"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "title": "Accesstoken",
            "type": "string"
          },
          "refreshToken": {
            "title": "Refreshtoken",
            "type": "string"
          },
          "tokenType": {
            "title": "Tokentype",
            "type": "string"
          }
        }
      },
      "AuthTokensResp": {
        "title": "AuthTokensResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/AuthTokens"
          }
        }
      },
      "DefaultRole": {
        "title": "DefaultRole",
        "enum": [
          "root",
          "admin",
          "user",
          "guest",
          "judge"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Detail": {
        "title": "Detail",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "Domain": {
        "title": "Domain",
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "displayed name of the domain"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string",
            "description": "gravatar url of the domain",
            "default": ""
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string",
            "description": "bulletin of the domain",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the domain hidden",
            "default": true
          },
          "tag": {
            "title": "Tag",
            "maxLength": 256,
            "type": "string",
            "description": "tag of the domain",
            "default": ""
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DomainCreate": {
        "title": "DomainCreate",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "displayed name of the domain"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string",
            "description": "gravatar url of the domain",
            "default": ""
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string",
            "description": "bulletin of the domain",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the domain hidden",
            "default": true
          },
          "tag": {
            "title": "Tag",
            "maxLength": 256,
            "type": "string",
            "description": "tag of the domain",
            "default": ""
          }
        }
      },
      "DomainDetail": {
        "title": "DomainDetail",
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "displayed name of the domain"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string",
            "description": "gravatar url of the domain",
            "default": ""
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string",
            "description": "bulletin of the domain",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the domain hidden",
            "default": true
          },
          "tag": {
            "title": "Tag",
            "maxLength": 256,
            "type": "string",
            "description": "tag of the domain",
            "default": ""
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DomainDetailResp": {
        "title": "DomainDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainDetail"
          }
        }
      },
      "DomainEdit": {
        "title": "DomainEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "type": "string"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string"
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          },
          "tag": {
            "title": "Tag",
            "maxLength": 256,
            "type": "string"
          }
        }
      },
      "DomainInvitation": {
        "title": "DomainInvitation",
        "required": [
          "id",
          "domainId",
          "code"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code"
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "description": "expire time of invitation",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation",
            "default": "user"
          }
        }
      },
      "DomainInvitationCreate": {
        "title": "DomainInvitationCreate",
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code"
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation",
            "default": "user"
          }
        }
      },
      "DomainInvitationEdit": {
        "title": "DomainInvitationEdit",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code"
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "description": "expire time of invitation",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation"
          }
        }
      },
      "DomainInvitationList": {
        "title": "DomainInvitationList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainInvitation"
            },
            "default": []
          }
        }
      },
      "DomainInvitationListResp": {
        "title": "DomainInvitationListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainInvitationList"
          }
        }
      },
      "DomainInvitationResp": {
        "title": "DomainInvitationResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainInvitation"
          }
        }
      },
      "DomainList": {
        "title": "DomainList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "default": []
          }
        }
      },
      "DomainListResp": {
        "title": "DomainListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainList"
          }
        }
      },
      "DomainPermission": {
        "title": "DomainPermission",
        "type": "object",
        "properties": {
          "general": {
            "title": "General",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralPermission"
              }
            ],
            "default": {
              "view": true,
              "edit_permission": false,
              "view_mod_badge": true,
              "edit": false,
              "unlimited_quota": false
            }
          },
          "problem": {
            "title": "Problem",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProblemPermission"
              }
            ],
            "default": {
              "create": false,
              "view": true,
              "view_hidden": false,
              "submit": true,
              "edit": false,
              "view_config": false
            }
          },
          "problemSet": {
            "title": "Problemset",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProblemSetPermission"
              }
            ],
            "default": {
              "create": false,
              "view": true,
              "view_hidden": false,
              "claim": true,
              "scoreboard": false,
              "manage": false,
              "edit": false,
              "view_config": false
            }
          },
          "record": {
            "title": "Record",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordPermission"
              }
            ],
            "default": {
              "view": true,
              "detail": false,
              "code": false,
              "rejudge": false
            }
          }
        },
        "description": "All permissions in a domain"
      },
      "DomainResp": {
        "title": "DomainResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Domain"
          }
        }
      },
      "DomainRole": {
        "title": "DomainRole",
        "required": [
          "id",
          "domainId",
          "role",
          "permission"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/DomainPermission"
          }
        }
      },
      "DomainRoleCreate": {
        "title": "DomainRoleCreate",
        "required": [
          "role",
          "permission"
        ],
        "type": "object",
        "properties": {
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/DomainPermission"
          }
        }
      },
      "DomainRoleDetail": {
        "title": "DomainRoleDetail",
        "required": [
          "id",
          "domainId",
          "role",
          "permission",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/DomainPermission"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DomainRoleDetailResp": {
        "title": "DomainRoleDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainRoleDetail"
          }
        }
      },
      "DomainRoleEdit": {
        "title": "DomainRoleEdit",
        "type": "object",
        "properties": {
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "New role name"
          },
          "permission": {
            "title": "Permission",
            "type": "object",
            "description": "The permission which needs to be updated"
          }
        }
      },
      "DomainRoleList": {
        "title": "DomainRoleList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainRole"
            },
            "default": []
          }
        }
      },
      "DomainRoleListResp": {
        "title": "DomainRoleListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainRoleList"
          }
        }
      },
      "DomainRoleResp": {
        "title": "DomainRoleResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainRole"
          }
        }
      },
      "DomainTransfer": {
        "title": "DomainTransfer",
        "required": [
          "targetUser"
        ],
        "type": "object",
        "properties": {
          "targetUser": {
            "title": "Targetuser",
            "type": "string",
            "description": "'me' or id of the user"
          }
        }
      },
      "DomainUserAdd": {
        "title": "DomainUserAdd",
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultRole"
              }
            ],
            "default": "user"
          },
          "user": {
            "title": "User",
            "type": "string",
            "description": "'me' or id of the user"
          }
        }
      },
      "DomainUserPermission": {
        "title": "DomainUserPermission",
        "required": [
          "domainId",
          "userId",
          "role",
          "permission"
        ],
        "type": "object",
        "properties": {
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "title": "Userid",
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "permission": {
            "$ref": "#/components/schemas/DomainPermission"
          }
        }
      },
      "DomainUserPermissionResp": {
        "title": "DomainUserPermissionResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainUserPermission"
          }
        }
      },
      "DomainUserUpdate": {
        "title": "DomainUserUpdate",
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultRole"
              }
            ],
            "default": "user"
          }
        }
      },
      "Empty": {
        "title": "Empty",
        "type": "object",
        "properties": {}
      },
      "EmptyResp": {
        "title": "EmptyResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Empty"
          }
        }
      },
      "ErrorCode": {
        "title": "ErrorCode",
        "enum": [
          "Success",
          "Error",
          "InternalServerError",
          "UnknownFieldError",
          "IllegalFieldError",
          "IntegrityError",
          "APINotImplementedError",
          "UserRegisterError",
          "UserLoginError",
          "UserNotFoundError",
          "DomainNotFoundError",
          "InvalidUrlError",
          "ProblemNotFoundError",
          "ProblemSetNotFoundError",
          "ProblemGroupNotFoundError",
          "ProblemConfigNotFoundError",
          "ProblemConfigValidationError",
          "ProblemConfigUpdateError",
          "ProblemConfigDownloadError",
          "RecordNotFoundError",
          "DeleteProblemBadRequestError",
          "UserAlreadyInDomainBadRequestError",
          "DomainInvitationBadRequestError",
          "ScoreboardHiddenBadRequestError",
          "UserNotJudgerError",
          "DomainNotOwnerError",
          "DomainNotRootError",
          "DomainRoleNotFoundError",
          "DomainRoleNotUniqueError",
          "DomainRoleReadOnlyError",
          "DomainRoleUsedError",
          "DomainUserNotFoundError",
          "FileSystemError"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "FileInfo": {
        "title": "FileInfo",
        "required": [
          "path",
          "is_dir"
        ],
        "type": "object",
        "properties": {
          "path": {
            "title": "Path",
            "type": "string"
          },
          "is_dir": {
            "title": "Is Dir",
            "type": "boolean"
          },
          "checksum": {
            "title": "Checksum",
            "type": "string"
          },
          "mtime": {
            "title": "Mtime",
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          },
          "size_bytes": {
            "title": "Size Bytes",
            "type": "integer",
            "default": 0
          }
        }
      },
      "FileInfoResp": {
        "title": "FileInfoResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FileInfo"
          }
        }
      },
      "FileUpload": {
        "title": "FileUpload",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "GeneralPermission": {
        "title": "GeneralPermission",
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "editPermission": {
            "title": "Editpermission",
            "type": "boolean",
            "default": false
          },
          "viewModBadge": {
            "title": "Viewmodbadge",
            "type": "boolean",
            "default": true
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "unlimitedQuota": {
            "title": "Unlimitedquota",
            "type": "boolean",
            "default": false
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "JWTAccessToken": {
        "title": "JWTAccessToken",
        "required": [
          "sub",
          "iat",
          "nbf",
          "jti",
          "exp",
          "type",
          "category",
          "username",
          "email",
          "studentId",
          "realName",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "sub": {
            "title": "Sub",
            "type": "string"
          },
          "iat": {
            "title": "Iat",
            "type": "integer"
          },
          "nbf": {
            "title": "Nbf",
            "type": "integer"
          },
          "jti": {
            "title": "Jti",
            "type": "string"
          },
          "exp": {
            "title": "Exp",
            "type": "integer"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "fresh": {
            "title": "Fresh",
            "type": "boolean",
            "default": false
          },
          "csrf": {
            "title": "Csrf",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "enum": [
              "user",
              "oauth"
            ],
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "studentId": {
            "title": "Studentid",
            "type": "string"
          },
          "realName": {
            "title": "Realname",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "oauthName": {
            "title": "Oauthname",
            "type": "string"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean"
          }
        }
      },
      "JWTAccessTokenResp": {
        "title": "JWTAccessTokenResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JWTAccessToken"
          }
        }
      },
      "JudgeClaim": {
        "title": "JudgeClaim",
        "required": [
          "problemConfigRepoName",
          "problemConfigCommitId",
          "recordRepoName",
          "recordCommitId"
        ],
        "type": "object",
        "properties": {
          "problemConfigRepoName": {
            "title": "Problemconfigreponame",
            "type": "string"
          },
          "problemConfigCommitId": {
            "title": "Problemconfigcommitid",
            "type": "string"
          },
          "recordRepoName": {
            "title": "Recordreponame",
            "type": "string"
          },
          "recordCommitId": {
            "title": "Recordcommitid",
            "type": "string"
          }
        }
      },
      "JudgeClaimResp": {
        "title": "JudgeClaimResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JudgeClaim"
          }
        }
      },
      "LakeFSReset": {
        "title": "LakeFSReset",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "enum": [
              "file",
              "dir",
              "all"
            ],
            "type": "string",
            "default": "all"
          },
          "path": {
            "title": "Path",
            "type": "string",
            "default": ""
          }
        }
      },
      "OAuth2PasswordRequestForm": {
        "title": "OAuth2PasswordRequestForm",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grantType": {
            "title": "Granttype",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "clientId": {
            "title": "Clientid",
            "type": "string"
          },
          "clientSecret": {
            "title": "Clientsecret",
            "type": "string"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "id",
          "domainId",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "problemGroupId": {
            "title": "Problemgroupid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemClone": {
        "title": "ProblemClone",
        "required": [
          "problems",
          "problemSet"
        ],
        "type": "object",
        "properties": {
          "problems": {
            "title": "Problems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "problemSet": {
            "title": "Problemset",
            "type": "string",
            "description": "url or id of the problem set"
          },
          "newGroup": {
            "title": "Newgroup",
            "type": "boolean",
            "description": "whether to create new problem group",
            "default": false
          }
        }
      },
      "ProblemConfig": {
        "title": "ProblemConfig",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "commitMessage": {
            "title": "Commitmessage",
            "type": "string",
            "default": ""
          },
          "dataVersion": {
            "title": "Dataversion",
            "type": "integer",
            "default": 2
          },
          "languages": {
            "title": "Languages",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "commitId": {
            "title": "Commitid",
            "type": "string",
            "default": ""
          },
          "committerId": {
            "title": "Committerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemConfigCommit": {
        "title": "ProblemConfigCommit",
        "type": "object",
        "properties": {}
      },
      "ProblemConfigResp": {
        "title": "ProblemConfigResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemConfig"
          }
        }
      },
      "ProblemCreate": {
        "title": "ProblemCreate",
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          }
        }
      },
      "ProblemDetail": {
        "title": "ProblemDetail",
        "required": [
          "id",
          "domainId",
          "title",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "problemGroupId": {
            "title": "Problemgroupid",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemDetailResp": {
        "title": "ProblemDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemDetail"
          }
        }
      },
      "ProblemDetailWithRecordState": {
        "title": "ProblemDetailWithRecordState",
        "required": [
          "id",
          "domainId",
          "title",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "problemGroupId": {
            "title": "Problemgroupid",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "recordId": {
            "title": "Recordid",
            "type": "string",
            "format": "uuid"
          },
          "recordState": {
            "$ref": "#/components/schemas/RecordState"
          }
        }
      },
      "ProblemDetailWithRecordStateResp": {
        "title": "ProblemDetailWithRecordStateResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemDetailWithRecordState"
          }
        }
      },
      "ProblemEdit": {
        "title": "ProblemEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          }
        }
      },
      "ProblemGroup": {
        "title": "ProblemGroup",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemGroupList": {
        "title": "ProblemGroupList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemGroup"
            },
            "default": []
          }
        }
      },
      "ProblemGroupListResp": {
        "title": "ProblemGroupListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemGroupList"
          }
        }
      },
      "ProblemList": {
        "title": "ProblemList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Problem"
            },
            "default": []
          }
        }
      },
      "ProblemListResp": {
        "title": "ProblemListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemList"
          }
        }
      },
      "ProblemPermission": {
        "title": "ProblemPermission",
        "type": "object",
        "properties": {
          "create": {
            "title": "Create",
            "type": "boolean",
            "default": false
          },
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "viewHidden": {
            "title": "Viewhidden",
            "type": "boolean",
            "default": false
          },
          "submit": {
            "title": "Submit",
            "type": "boolean",
            "default": true
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "viewConfig": {
            "title": "Viewconfig",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ProblemPreviewWithRecordState": {
        "title": "ProblemPreviewWithRecordState",
        "required": [
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "recordId": {
            "title": "Recordid",
            "type": "string",
            "format": "uuid"
          },
          "recordState": {
            "$ref": "#/components/schemas/RecordState"
          }
        }
      },
      "ProblemResp": {
        "title": "ProblemResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Problem"
          }
        }
      },
      "ProblemSet": {
        "title": "ProblemSet",
        "required": [
          "id",
          "domainId",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "title of the problem set"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem set",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "whether the problem set is hidden",
            "default": false
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean",
            "description": "whether the scoreboard of the problem set is hidden",
            "default": false
          },
          "dueAt": {
            "title": "Dueat",
            "type": "string",
            "description": "the problem set is due at this date",
            "format": "date-time"
          },
          "lockAt": {
            "title": "Lockat",
            "type": "string",
            "description": "the problem set is locked after this date",
            "format": "date-time"
          },
          "unlockAt": {
            "title": "Unlockat",
            "type": "string",
            "description": "the problem set is unlocked after this date",
            "format": "date-time"
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemSetAddProblem": {
        "title": "ProblemSetAddProblem",
        "required": [
          "problem"
        ],
        "type": "object",
        "properties": {
          "position": {
            "title": "Position",
            "type": "integer",
            "description": "the position of the problem in the problem set. if None, append to the end of the problems list."
          },
          "problem": {
            "title": "Problem",
            "type": "string",
            "description": "url or id of the problem"
          }
        }
      },
      "ProblemSetCreate": {
        "title": "ProblemSetCreate",
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "title of the problem set"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem set",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "whether the problem set is hidden",
            "default": false
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean",
            "description": "whether the scoreboard of the problem set is hidden",
            "default": false
          },
          "dueAt": {
            "title": "Dueat",
            "type": "string",
            "format": "date-time"
          },
          "lockAt": {
            "title": "Lockat",
            "type": "string",
            "format": "date-time"
          },
          "unlockAt": {
            "title": "Unlockat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemSetDetail": {
        "title": "ProblemSetDetail",
        "required": [
          "id",
          "domainId",
          "title",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "title of the problem set"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem set",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "whether the problem set is hidden",
            "default": false
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean",
            "description": "whether the scoreboard of the problem set is hidden",
            "default": false
          },
          "dueAt": {
            "title": "Dueat",
            "type": "string",
            "description": "the problem set is due at this date",
            "format": "date-time"
          },
          "lockAt": {
            "title": "Lockat",
            "type": "string",
            "description": "the problem set is locked after this date",
            "format": "date-time"
          },
          "unlockAt": {
            "title": "Unlockat",
            "type": "string",
            "description": "the problem set is unlocked after this date",
            "format": "date-time"
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "problems": {
            "title": "Problems",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemPreviewWithRecordState"
            },
            "default": []
          }
        }
      },
      "ProblemSetDetailResp": {
        "title": "ProblemSetDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemSetDetail"
          }
        }
      },
      "ProblemSetEdit": {
        "title": "ProblemSetEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean"
          },
          "dueAt": {
            "title": "Dueat",
            "type": "string",
            "format": "date-time"
          },
          "lockAt": {
            "title": "Lockat",
            "type": "string",
            "format": "date-time"
          },
          "unlockAt": {
            "title": "Unlockat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemSetList": {
        "title": "ProblemSetList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemSet"
            },
            "default": []
          }
        }
      },
      "ProblemSetListResp": {
        "title": "ProblemSetListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemSetList"
          }
        }
      },
      "ProblemSetPermission": {
        "title": "ProblemSetPermission",
        "type": "object",
        "properties": {
          "create": {
            "title": "Create",
            "type": "boolean",
            "default": false
          },
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "viewHidden": {
            "title": "Viewhidden",
            "type": "boolean",
            "default": false
          },
          "claim": {
            "title": "Claim",
            "type": "boolean",
            "default": true
          },
          "scoreboard": {
            "title": "Scoreboard",
            "type": "boolean",
            "default": false
          },
          "manage": {
            "title": "Manage",
            "type": "boolean",
            "default": false
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "viewConfig": {
            "title": "Viewconfig",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ProblemSetResp": {
        "title": "ProblemSetResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemSet"
          }
        }
      },
      "ProblemSetUpdateProblem": {
        "title": "ProblemSetUpdateProblem",
        "type": "object",
        "properties": {
          "position": {
            "title": "Position",
            "type": "integer",
            "description": "the position of the problem in the problem set. if None, append to the end of the problems list."
          }
        }
      },
      "ProblemSolutionSubmit": {
        "title": "ProblemSolutionSubmit",
        "required": [
          "codeType"
        ],
        "type": "object",
        "properties": {
          "codeType": {
            "$ref": "#/components/schemas/RecordCodeType"
          },
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ProblemWithRecordState": {
        "title": "ProblemWithRecordState",
        "required": [
          "id",
          "domainId",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "problemGroupId": {
            "title": "Problemgroupid",
            "type": "string",
            "format": "uuid"
          },
          "recordId": {
            "title": "Recordid",
            "type": "string",
            "format": "uuid"
          },
          "recordState": {
            "$ref": "#/components/schemas/RecordState"
          }
        }
      },
      "ProblemWithRecordStateList": {
        "title": "ProblemWithRecordStateList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemWithRecordState"
            },
            "default": []
          }
        }
      },
      "ProblemWithRecordStateListResp": {
        "title": "ProblemWithRecordStateListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemWithRecordStateList"
          }
        }
      },
      "Record": {
        "title": "Record",
        "required": [
          "id",
          "language"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordState"
              }
            ],
            "default": "processing"
          },
          "language": {
            "title": "Language",
            "type": "string"
          },
          "toolchains": {
            "title": "Toolchains",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "commitId": {
            "title": "Commitid",
            "type": "string"
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "default": 0
          },
          "timeMs": {
            "title": "Timems",
            "type": "integer",
            "default": 0
          },
          "memoryKb": {
            "title": "Memorykb",
            "type": "integer",
            "default": 0
          },
          "problemSetId": {
            "title": "Problemsetid",
            "type": "string",
            "format": "uuid"
          },
          "problemId": {
            "title": "Problemid",
            "type": "string",
            "format": "uuid"
          },
          "problemConfigId": {
            "title": "Problemconfigid",
            "type": "string",
            "format": "uuid"
          },
          "committerId": {
            "title": "Committerid",
            "type": "string",
            "format": "uuid"
          },
          "judgerId": {
            "title": "Judgerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "RecordCodeType": {
        "title": "RecordCodeType",
        "enum": [
          "text",
          "archive"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "RecordList": {
        "title": "RecordList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record"
            },
            "default": []
          }
        }
      },
      "RecordListResp": {
        "title": "RecordListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RecordList"
          }
        }
      },
      "RecordPermission": {
        "title": "RecordPermission",
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "detail": {
            "title": "Detail",
            "type": "boolean",
            "default": false
          },
          "code": {
            "title": "Code",
            "type": "boolean",
            "default": false
          },
          "rejudge": {
            "title": "Rejudge",
            "type": "boolean",
            "default": false
          }
        }
      },
      "RecordResp": {
        "title": "RecordResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Record"
          }
        }
      },
      "RecordResult": {
        "title": "RecordResult",
        "required": [
          "state",
          "score",
          "timeMs",
          "memoryKb",
          "judgeAt"
        ],
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/RecordState"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "timeMs": {
            "title": "Timems",
            "type": "integer"
          },
          "memoryKb": {
            "title": "Memorykb",
            "type": "integer"
          },
          "judgeAt": {
            "title": "Judgeat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecordState": {
        "title": "RecordState",
        "enum": [
          "processing",
          "queueing",
          "fetched",
          "compiling",
          "running",
          "judging",
          "accepted",
          "rejected",
          "failed"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Score": {
        "title": "Score",
        "required": [
          "score",
          "time",
          "fullScore",
          "timeSpent",
          "tried"
        ],
        "type": "object",
        "properties": {
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "fullScore": {
            "title": "Fullscore",
            "type": "integer"
          },
          "timeSpent": {
            "title": "Timespent",
            "type": "number",
            "format": "time-delta"
          },
          "tried": {
            "title": "Tried",
            "type": "boolean"
          }
        }
      },
      "ScoreBoard": {
        "title": "ScoreBoard",
        "required": [
          "problemIds",
          "results"
        ],
        "type": "object",
        "properties": {
          "problemIds": {
            "title": "Problemids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScore"
            }
          }
        }
      },
      "ScoreBoardResp": {
        "title": "ScoreBoardResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ScoreBoard"
          }
        }
      },
      "User": {
        "title": "User",
        "required": [
          "id",
          "username",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "role": {
            "title": "Role",
            "type": "string",
            "default": "user"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserAccessKey": {
        "title": "UserAccessKey",
        "required": [
          "id",
          "service",
          "accessKeyId",
          "secretAccessKey",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "service": {
            "title": "Service",
            "type": "string"
          },
          "accessKeyId": {
            "title": "Accesskeyid",
            "type": "string"
          },
          "secretAccessKey": {
            "title": "Secretaccesskey",
            "type": "string"
          },
          "userId": {
            "title": "Userid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserAccessKeyResp": {
        "title": "UserAccessKeyResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserAccessKey"
          }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "oauth_name": {
            "title": "Oauth Name",
            "type": "string"
          },
          "oauth_account_id": {
            "title": "Oauth Account Id",
            "type": "string"
          }
        }
      },
      "UserDetail": {
        "title": "UserDetail",
        "required": [
          "id",
          "username",
          "email",
          "createdAt",
          "updatedAt",
          "registerIp",
          "loginAt",
          "loginIp"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "role": {
            "title": "Role",
            "type": "string",
            "default": "user"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "registerIp": {
            "title": "Registerip",
            "type": "string"
          },
          "loginAt": {
            "title": "Loginat",
            "type": "string",
            "format": "date-time"
          },
          "loginIp": {
            "title": "Loginip",
            "type": "string"
          }
        }
      },
      "UserDetailResp": {
        "title": "UserDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserDetail"
          }
        }
      },
      "UserList": {
        "title": "UserList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "default": []
          }
        }
      },
      "UserListResp": {
        "title": "UserListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserList"
          }
        }
      },
      "UserResp": {
        "title": "UserResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserScore": {
        "title": "UserScore",
        "required": [
          "user",
          "totalScore",
          "totalTimeSpent",
          "scores"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer"
          },
          "totalTimeSpent": {
            "title": "Totaltimespent",
            "type": "number",
            "format": "time-delta"
          },
          "scores": {
            "title": "Scores",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Score"
            }
          }
        }
      },
      "UserWithDomainRole": {
        "title": "UserWithDomainRole",
        "required": [
          "id",
          "username",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "domainRole": {
            "title": "Domainrole",
            "type": "string"
          }
        }
      },
      "UserWithDomainRoleList": {
        "title": "UserWithDomainRoleList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserWithDomainRole"
            },
            "default": []
          }
        }
      },
      "UserWithDomainRoleListResp": {
        "title": "UserWithDomainRoleListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserWithDomainRoleList"
          }
        }
      },
      "UserWithDomainRoleResp": {
        "title": "UserWithDomainRoleResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserWithDomainRole"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Version": {
        "title": "Version",
        "required": [
          "version",
          "git"
        ],
        "type": "object",
        "properties": {
          "version": {
            "title": "Version",
            "type": "string"
          },
          "git": {
            "title": "Git",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
