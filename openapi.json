{
  "openapi": "3.0.2",
  "info": {
    "title": "JOJ Horse",
    "description": "Git version: 86513ec@2021-11-08T09:14:12Z",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Redirect To Docs",
        "operationId": "redirect_to_docs__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api": {
      "get": {
        "summary": "Redirect To Docs",
        "operationId": "redirect_to_docs_api_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/domains": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domains",
        "description": "List all domains that the current user has a role.",
        "operationId": "list_domains_api_v1_domains_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Role",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "name": "role",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: name",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain",
        "operationId": "create_domain_api_v1_domains_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain",
        "operationId": "get_domain_api_v1_domains__domain__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain",
        "description": "TODO: finish this part\n\ntc-imba: delete domain have many side effects, and is not urgent,\n         marked it deprecated and implement it later",
        "operationId": "delete_domain_api_v1_domains__domain__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain",
        "operationId": "update_domain_api_v1_domains__domain__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/transfer": {
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Transfer Domain",
        "operationId": "transfer_domain_api_v1_domains__domain__transfer_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainTransfer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domain Users",
        "operationId": "list_domain_users_api_v1_domains__domain__users_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Add Domain User",
        "operationId": "add_domain_user_api_v1_domains__domain__users_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainUserAdd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users/{user}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain User",
        "operationId": "get_domain_user_api_v1_domains__domain__users__user__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Remove Domain User",
        "operationId": "remove_domain_user_api_v1_domains__domain__users__user__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain User",
        "operationId": "update_domain_user_api_v1_domains__domain__users__user__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainUserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/users/{user}/permission": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get Domain User Permission",
        "operationId": "get_domain_user_permission_api_v1_domains__domain__users__user__permission_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "user id or 'me' or empty",
            "required": true,
            "schema": {
              "title": "User",
              "type": "string",
              "description": "user id or 'me' or empty"
            },
            "name": "user",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserPermissionResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/roles": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "List Domain Roles",
        "operationId": "list_domain_roles_api_v1_domains__domain__roles_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain Role",
        "operationId": "create_domain_role_api_v1_domains__domain__roles_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRoleCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/roles/{role}": {
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain Role",
        "operationId": "delete_domain_role_api_v1_domains__domain__roles__role__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "name of the domain role",
            "required": true,
            "schema": {
              "title": "Role",
              "maxLength": 256,
              "minLength": 1,
              "type": "string",
              "description": "name of the domain role"
            },
            "name": "role",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain Role",
        "operationId": "update_domain_role_api_v1_domains__domain__roles__role__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "name of the domain role",
            "required": true,
            "schema": {
              "title": "Role",
              "maxLength": 256,
              "minLength": 1,
              "type": "string",
              "description": "name of the domain role"
            },
            "name": "role",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainRoleEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/invitations": {
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Create Domain Invitation",
        "operationId": "create_domain_invitation_api_v1_domains__domain__invitations_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainInvitationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/invitations/{invitation}": {
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "Delete Domain Invitation",
        "operationId": "delete_domain_invitation_api_v1_domains__domain__invitations__invitation__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the domain invitation",
            "required": true,
            "schema": {
              "title": "Invitation",
              "type": "string",
              "description": "url or id of the domain invitation"
            },
            "name": "invitation",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "Update Domain Invitation",
        "operationId": "update_domain_invitation_api_v1_domains__domain__invitations__invitation__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the domain invitation",
            "required": true,
            "schema": {
              "title": "Invitation",
              "type": "string",
              "description": "url or id of the domain invitation"
            },
            "name": "invitation",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainInvitationEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainInvitationResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/join": {
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Join Domain By Invitation",
        "operationId": "join_domain_by_invitation_api_v1_domains__domain__join_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Invitationcode",
              "type": "string"
            },
            "name": "invitationCode",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "List Problem Sets",
        "operationId": "list_problem_sets_api_v1_domains__domain__problem_sets_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem set"
        ],
        "summary": "Create Problem Set",
        "operationId": "create_problem_set_api_v1_domains__domain__problem_sets_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problem_set}": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "Get Problem Set",
        "operationId": "get_problem_set_api_v1_domains__domain__problem_sets__problem_set__get",
        "parameters": [
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem set"
        ],
        "summary": "Delete Problem Set",
        "operationId": "delete_problem_set_api_v1_domains__domain__problem_sets__problem_set__delete",
        "parameters": [
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "problem set"
        ],
        "summary": "Update Problem Set",
        "operationId": "update_problem_set_api_v1_domains__domain__problem_sets__problem_set__patch",
        "parameters": [
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSetEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemSetResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problem_sets/{problem_set}/scoreboard": {
      "get": {
        "tags": [
          "problem set"
        ],
        "summary": "Get Scoreboard",
        "operationId": "get_scoreboard_api_v1_domains__domain__problem_sets__problem_set__scoreboard_get",
        "parameters": [
          {
            "description": "url or id of the problem set",
            "required": true,
            "schema": {
              "title": "Problemset",
              "type": "string",
              "description": "url or id of the problem set"
            },
            "name": "problemSet",
            "in": "path"
          },
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoreBoardResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems": {
      "get": {
        "tags": [
          "problem"
        ],
        "summary": "List Problems",
        "operationId": "list_problems_api_v1_domains__domain__problems_get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Problemset",
              "type": "string"
            },
            "name": "problemSet",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Problemgroup",
              "type": "string"
            },
            "name": "problemGroup",
            "in": "query"
          },
          {
            "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: Any",
            "required": false,
            "schema": {
              "title": "Ordering",
              "type": "string",
              "description": "Comma seperated list of ordering the results.\nYou may specify reverse orderings by prefixing the field name with '-'.\n\nAvailable fields: Any",
              "default": ""
            },
            "name": "ordering",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Create Problem",
        "operationId": "create_problem_api_v1_domains__domain__problems_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}": {
      "get": {
        "tags": [
          "problem"
        ],
        "summary": "Get Problem",
        "operationId": "get_problem_api_v1_domains__domain__problems__problem__get",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Submit Solution To Problem",
        "operationId": "submit_solution_to_problem_api_v1_domains__domain__problems__problem__post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProblemSolutionSubmit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "problem"
        ],
        "summary": "Delete Problem",
        "operationId": "delete_problem_api_v1_domains__domain__problems__problem__delete",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "problem"
        ],
        "summary": "Update Problem",
        "operationId": "update_problem_api_v1_domains__domain__problems__problem__patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/{problem}/config": {
      "patch": {
        "tags": [
          "problem"
        ],
        "summary": "Update Problem Config",
        "operationId": "update_problem_config_api_v1_domains__domain__problems__problem__config_patch",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          },
          {
            "description": "url or id of the problem",
            "required": true,
            "schema": {
              "title": "Problem",
              "type": "string",
              "description": "url or id of the problem"
            },
            "name": "problem",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProblemConfigEdit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/domains/{domain}/problems/clone": {
      "post": {
        "tags": [
          "problem"
        ],
        "summary": "Clone Problem",
        "operationId": "clone_problem_api_v1_domains__domain__problems_clone_post",
        "parameters": [
          {
            "description": "url or id of the domain",
            "required": true,
            "schema": {
              "title": "Domain",
              "type": "string",
              "description": "url or id of the domain"
            },
            "name": "domain",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProblemClone"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/records": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "List Records",
        "operationId": "list_records_api_v1_records_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Domain",
              "type": "string"
            },
            "name": "domain",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Problemset",
              "type": "string"
            },
            "name": "problemSet",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Problem",
              "type": "string"
            },
            "name": "problem",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "description": "user id or 'me' or empty",
            "required": false,
            "schema": {
              "title": "Uid",
              "type": "string",
              "description": "user id or 'me' or empty",
              "default": ""
            },
            "name": "uid",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/records/{record}": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "Get Record",
        "operationId": "get_record_api_v1_records__record__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/records/{record}/code": {
      "get": {
        "tags": [
          "record"
        ],
        "summary": "Get Record Code",
        "operationId": "get_record_code_api_v1_records__record__code_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Record Code Api V1 Records  Record  Code Get"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/records/{record}/http": {
      "post": {
        "tags": [
          "record"
        ],
        "summary": "Http Record",
        "operationId": "http_record_api_v1_records__record__http_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/records/{record}/cases/http": {
      "post": {
        "tags": [
          "record"
        ],
        "summary": "Http Record Cases",
        "operationId": "http_record_cases_api_v1_records__record__cases_http_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Record",
              "type": "string"
            },
            "name": "record",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordCaseResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/problem_groups": {
      "get": {
        "tags": [
          "problem group"
        ],
        "summary": "List Problem Groups",
        "operationId": "list_problem_groups_api_v1_problem_groups_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemGroupListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v1_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/user/problems": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Problems",
        "operationId": "get_user_problems_api_v1_user_problems_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User",
        "operationId": "get_user_api_v1_users__uid__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}/domains": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Domains",
        "operationId": "get_user_domains_api_v1_users__uid__domains_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Role",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "name": "role",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/{uid}/problems": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Problems",
        "operationId": "get_user_problems_api_v1_users__uid__problems_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_auth_login_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/OAuth2PasswordRequestForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_api_v1_auth_logout_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Logout Api V1 Auth Logout Post"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register_api_v1_auth_register_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/token": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Get Token",
        "operationId": "get_token_api_v1_auth_token_get",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh",
        "operationId": "refresh_api_v1_auth_refresh_post",
        "parameters": [
          {
            "description": "Add Set/Delete-Cookie on response header",
            "required": false,
            "schema": {
              "title": "Cookie",
              "type": "boolean",
              "description": "Add Set/Delete-Cookie on response header",
              "default": true
            },
            "name": "cookie",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Responsetype",
              "enum": [
                "redirect",
                "json"
              ],
              "type": "string"
            },
            "name": "responseType",
            "in": "query"
          },
          {
            "description": "The redirect url after the operation",
            "required": false,
            "schema": {
              "title": "Redirecturl",
              "type": "string",
              "description": "The redirect url after the operation"
            },
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokensResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Version",
        "operationId": "version_api_v1_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jwt_decoded": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Jwt Decoded",
        "operationId": "jwt_decoded_api_v1_jwt_decoded_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWTAccessTokenResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/test/sentry": {
      "get": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Test Sentry",
        "operationId": "test_sentry_api_v1_test_sentry_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Test Sentry Api V1 Test Sentry Get",
                  "type": "null"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/set_root_user": {
      "post": {
        "tags": [
          "miscellaneous"
        ],
        "summary": "Set Root User",
        "operationId": "set_root_user_api_v1_set_root_user_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Users",
        "operationId": "list_users_api_v1_admin_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBaseListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_v1_admin_users_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Studentid",
              "type": "string"
            },
            "name": "studentId",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Jaccountname",
              "type": "string"
            },
            "name": "jaccountName",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Realname",
              "type": "string"
            },
            "name": "realName",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Ip",
              "type": "string"
            },
            "name": "ip",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/users/{uid}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete User",
        "operationId": "delete_user_api_v1_admin_users__uid__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/domain_users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Domain Users",
        "operationId": "list_domain_users_api_v1_admin_domain_users_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainUserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/domain_roles": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Domain Roles",
        "operationId": "list_domain_roles_api_v1_admin_domain_roles_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainRoleListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/judgers": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Judgers",
        "operationId": "list_judgers_api_v1_admin_judgers_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0.0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 500.0,
              "exclusiveMinimum": 0.0,
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Judger",
        "operationId": "create_judger_api_v1_admin_judgers_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uname",
              "type": "string"
            },
            "name": "uname",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Mail",
              "type": "string",
              "format": "email"
            },
            "name": "mail",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/admin/judgers/{uid}/jwt": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Judger Jwt",
        "operationId": "get_judger_jwt_api_v1_admin_judgers__uid__jwt_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Uid",
              "type": "string"
            },
            "name": "uid",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWT"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AuthTokens": {
        "title": "AuthTokens",
        "required": [
          "accessToken",
          "refreshToken",
          "tokenType"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "title": "Accesstoken",
            "type": "string"
          },
          "refreshToken": {
            "title": "Refreshtoken",
            "type": "string"
          },
          "tokenType": {
            "title": "Tokentype",
            "type": "string"
          }
        }
      },
      "AuthTokensResp": {
        "title": "AuthTokensResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/AuthTokens"
          }
        }
      },
      "DefaultRole": {
        "title": "DefaultRole",
        "enum": [
          "root",
          "admin",
          "user",
          "guest",
          "judge"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Detail": {
        "title": "Detail",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        }
      },
      "Domain": {
        "title": "Domain",
        "required": [
          "url",
          "name",
          "ownerId"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "displayed name of the domain"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string",
            "description": "gravatar url of the domain",
            "default": ""
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string",
            "description": "bulletin of the domain",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the domain hidden",
            "default": true
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DomainCreate": {
        "title": "DomainCreate",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "displayed name of the domain"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string",
            "description": "gravatar url of the domain",
            "default": ""
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string",
            "description": "bulletin of the domain",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the domain hidden",
            "default": true
          }
        }
      },
      "DomainEdit": {
        "title": "DomainEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "maxLength": 256,
            "type": "string"
          },
          "gravatar": {
            "title": "Gravatar",
            "maxLength": 256,
            "type": "string"
          },
          "bulletin": {
            "title": "Bulletin",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          }
        }
      },
      "DomainInvitation": {
        "title": "DomainInvitation",
        "required": [
          "url",
          "domainId"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code",
            "default": ""
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "description": "expire time of invitation",
            "format": "date-time",
            "default": "9999-12-31T23:59:59.999999"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation",
            "default": "user"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DomainInvitationCreate": {
        "title": "DomainInvitationCreate",
        "required": [
          "expireAt"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code",
            "default": ""
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation",
            "default": "user"
          }
        }
      },
      "DomainInvitationEdit": {
        "title": "DomainInvitationEdit",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "maxLength": 256,
            "type": "string",
            "description": "invitation code"
          },
          "expireAt": {
            "title": "Expireat",
            "type": "string",
            "description": "expire time of invitation",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string",
            "description": "domain role after invitation"
          }
        }
      },
      "DomainInvitationResp": {
        "title": "DomainInvitationResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainInvitation"
          }
        }
      },
      "DomainList": {
        "title": "DomainList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            },
            "default": []
          }
        }
      },
      "DomainListResp": {
        "title": "DomainListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainList"
          }
        }
      },
      "DomainPermission": {
        "title": "DomainPermission",
        "type": "object",
        "properties": {
          "general": {
            "title": "General",
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralPermission"
              }
            ],
            "default": {
              "view": true,
              "edit_permission": false,
              "view_mod_badge": true,
              "edit": false,
              "unlimited_quota": false
            }
          },
          "problem": {
            "title": "Problem",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProblemPermission"
              }
            ],
            "default": {
              "create": false,
              "view": true,
              "view_hidden": false,
              "submit": true,
              "edit": false,
              "view_config": false
            }
          },
          "problemSet": {
            "title": "Problemset",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProblemSetPermission"
              }
            ],
            "default": {
              "create": false,
              "view": true,
              "view_hidden": false,
              "claim": true,
              "scoreboard": false,
              "manage": false,
              "edit": false,
              "view_config": false
            }
          },
          "record": {
            "title": "Record",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordPermission"
              }
            ],
            "default": {
              "view": true,
              "detail": false,
              "code": false,
              "judge": false,
              "rejudge": false
            }
          }
        },
        "description": "All permissions in a domain"
      },
      "DomainResp": {
        "title": "DomainResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Domain"
          }
        }
      },
      "DomainRole": {
        "title": "DomainRole",
        "required": [
          "role",
          "permission",
          "domainId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "permission": {
            "title": "Permission",
            "type": "object"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DomainRoleCreate": {
        "title": "DomainRoleCreate",
        "required": [
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "permission": {
            "title": "Permission",
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainPermission"
              }
            ],
            "default": {
              "general": {
                "view": true,
                "edit_permission": false,
                "view_mod_badge": true,
                "edit": false,
                "unlimited_quota": false
              },
              "problem": {
                "create": false,
                "view": true,
                "view_hidden": false,
                "submit": true,
                "edit": false,
                "view_config": false
              },
              "problem_set": {
                "create": false,
                "view": true,
                "view_hidden": false,
                "claim": true,
                "scoreboard": false,
                "manage": false,
                "edit": false,
                "view_config": false
              },
              "record": {
                "view": true,
                "detail": false,
                "code": false,
                "judge": false,
                "rejudge": false
              }
            }
          }
        }
      },
      "DomainRoleEdit": {
        "title": "DomainRoleEdit",
        "type": "object",
        "properties": {
          "role": {
            "title": "Role",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "New role name"
          },
          "permission": {
            "title": "Permission",
            "type": "object",
            "description": "The permission which needs to be updated"
          }
        }
      },
      "DomainRoleList": {
        "title": "DomainRoleList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainRole"
            },
            "default": []
          }
        }
      },
      "DomainRoleListResp": {
        "title": "DomainRoleListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainRoleList"
          }
        }
      },
      "DomainRoleResp": {
        "title": "DomainRoleResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainRole"
          }
        }
      },
      "DomainTransfer": {
        "title": "DomainTransfer",
        "required": [
          "targetUser"
        ],
        "type": "object",
        "properties": {
          "targetUser": {
            "title": "Targetuser",
            "type": "string",
            "description": "'me' or id of the user"
          }
        }
      },
      "DomainUser": {
        "title": "DomainUser",
        "required": [
          "role",
          "domainId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "title": "Userid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "DomainUserAdd": {
        "title": "DomainUserAdd",
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultRole"
              }
            ],
            "default": "user"
          },
          "user": {
            "title": "User",
            "type": "string",
            "description": "'me' or id of the user"
          }
        }
      },
      "DomainUserList": {
        "title": "DomainUserList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainUser"
            },
            "default": []
          }
        }
      },
      "DomainUserListResp": {
        "title": "DomainUserListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainUserList"
          }
        }
      },
      "DomainUserPermission": {
        "title": "DomainUserPermission",
        "required": [
          "domainUser",
          "permission"
        ],
        "type": "object",
        "properties": {
          "domainUser": {
            "$ref": "#/components/schemas/DomainUser"
          },
          "permission": {
            "$ref": "#/components/schemas/DomainPermission"
          }
        }
      },
      "DomainUserPermissionResp": {
        "title": "DomainUserPermissionResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainUserPermission"
          }
        }
      },
      "DomainUserResp": {
        "title": "DomainUserResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DomainUser"
          }
        }
      },
      "DomainUserUpdate": {
        "title": "DomainUserUpdate",
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultRole"
              }
            ],
            "default": "user"
          }
        }
      },
      "Empty": {
        "title": "Empty",
        "type": "object",
        "properties": {}
      },
      "EmptyResp": {
        "title": "EmptyResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Empty"
          }
        }
      },
      "ErrorCode": {
        "title": "ErrorCode",
        "enum": [
          "Success",
          "Error",
          "InternalServerError",
          "UnknownFieldError",
          "IllegalFieldError",
          "IntegrityError",
          "APINotImplementedError",
          "UserNotFoundError",
          "UserRegisterError",
          "DomainNotFoundError",
          "InvalidUrlError",
          "ProblemNotFoundError",
          "ProblemSetNotFoundError",
          "ProblemGroupNotFoundError",
          "RecordNotFoundError",
          "DeleteProblemBadRequestError",
          "UserAlreadyInDomainBadRequestError",
          "DomainInvitationBadRequestError",
          "ScoreboardHiddenBadRequestError",
          "ProblemSetBeforeAvailableError",
          "ProblemSetAfterDueError",
          "UserNotJudgerError",
          "DomainNotOwnerError",
          "DomainNotRootError",
          "DomainRoleNotFoundError",
          "DomainRoleNotUniqueError",
          "DomainRoleReadOnlyError",
          "DomainRoleUsedError",
          "DomainUserNotFoundError"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "GeneralPermission": {
        "title": "GeneralPermission",
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "editPermission": {
            "title": "Editpermission",
            "type": "boolean",
            "default": false
          },
          "viewModBadge": {
            "title": "Viewmodbadge",
            "type": "boolean",
            "default": true
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "unlimitedQuota": {
            "title": "Unlimitedquota",
            "type": "boolean",
            "default": false
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "JWT": {
        "title": "JWT",
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "title": "Jwt",
            "type": "string"
          }
        }
      },
      "JWTAccessToken": {
        "title": "JWTAccessToken",
        "required": [
          "sub",
          "iat",
          "nbf",
          "jti",
          "exp",
          "type",
          "category",
          "username",
          "email",
          "studentId",
          "realName",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "sub": {
            "title": "Sub",
            "type": "string"
          },
          "iat": {
            "title": "Iat",
            "type": "integer"
          },
          "nbf": {
            "title": "Nbf",
            "type": "integer"
          },
          "jti": {
            "title": "Jti",
            "type": "string"
          },
          "exp": {
            "title": "Exp",
            "type": "integer"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "fresh": {
            "title": "Fresh",
            "type": "boolean",
            "default": false
          },
          "csrf": {
            "title": "Csrf",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "enum": [
              "user",
              "oauth"
            ],
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "studentId": {
            "title": "Studentid",
            "type": "string"
          },
          "realName": {
            "title": "Realname",
            "type": "string"
          },
          "role": {
            "title": "Role",
            "type": "string"
          },
          "oauthName": {
            "title": "Oauthname",
            "type": "string"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean"
          }
        }
      },
      "JWTAccessTokenResp": {
        "title": "JWTAccessTokenResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JWTAccessToken"
          }
        }
      },
      "OAuth2PasswordRequestForm": {
        "title": "OAuth2PasswordRequestForm",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grantType": {
            "title": "Granttype",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "clientId": {
            "title": "Clientid",
            "type": "string"
          },
          "clientSecret": {
            "title": "Clientsecret",
            "type": "string"
          }
        }
      },
      "Problem": {
        "title": "Problem",
        "required": [
          "url",
          "title",
          "domainId",
          "ownerId",
          "problemGroupId"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "dataVersion": {
            "title": "Dataversion",
            "type": "integer",
            "default": 2
          },
          "languages": {
            "title": "Languages",
            "type": "string",
            "default": "[]"
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          },
          "problemGroupId": {
            "title": "Problemgroupid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemClone": {
        "title": "ProblemClone",
        "required": [
          "problems",
          "problemSet"
        ],
        "type": "object",
        "properties": {
          "problems": {
            "title": "Problems",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "problemSet": {
            "title": "Problemset",
            "type": "string",
            "description": "url or id of the problem set"
          },
          "newGroup": {
            "title": "Newgroup",
            "type": "boolean",
            "description": "whether to create new problem group",
            "default": false
          }
        }
      },
      "ProblemConfigEdit": {
        "title": "ProblemConfigEdit",
        "required": [
          "config"
        ],
        "type": "object",
        "properties": {
          "config": {
            "title": "Config",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ProblemCreate": {
        "title": "ProblemCreate",
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string",
            "description": "title of the problem"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "is the problem hidden",
            "default": false
          }
        }
      },
      "ProblemEdit": {
        "title": "ProblemEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          }
        }
      },
      "ProblemGroup": {
        "title": "ProblemGroup",
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemGroupList": {
        "title": "ProblemGroupList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemGroup"
            },
            "default": []
          }
        }
      },
      "ProblemGroupListResp": {
        "title": "ProblemGroupListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemGroupList"
          }
        }
      },
      "ProblemList": {
        "title": "ProblemList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Problem"
            },
            "default": []
          }
        }
      },
      "ProblemListResp": {
        "title": "ProblemListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemList"
          }
        }
      },
      "ProblemPermission": {
        "title": "ProblemPermission",
        "type": "object",
        "properties": {
          "create": {
            "title": "Create",
            "type": "boolean",
            "default": false
          },
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "viewHidden": {
            "title": "Viewhidden",
            "type": "boolean",
            "default": false
          },
          "submit": {
            "title": "Submit",
            "type": "boolean",
            "default": true
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "viewConfig": {
            "title": "Viewconfig",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ProblemResp": {
        "title": "ProblemResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Problem"
          }
        }
      },
      "ProblemSet": {
        "title": "ProblemSet",
        "required": [
          "url",
          "title",
          "domainId",
          "ownerId"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "title of the problem set"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem set",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "whether the problem set is hidden",
            "default": false
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean",
            "description": "whether the scoreboard of the problem set is hidden",
            "default": false
          },
          "availableTime": {
            "title": "Availabletime",
            "type": "string",
            "description": "the problem set is available from",
            "format": "date-time"
          },
          "dueTime": {
            "title": "Duetime",
            "type": "string",
            "description": "the problem set is due at",
            "format": "date-time"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "numSubmit": {
            "title": "Numsubmit",
            "type": "integer",
            "default": 0
          },
          "numAccept": {
            "title": "Numaccept",
            "type": "integer",
            "default": 0
          },
          "domainId": {
            "title": "Domainid",
            "type": "string",
            "format": "uuid"
          },
          "ownerId": {
            "title": "Ownerid",
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProblemSetCreate": {
        "title": "ProblemSetCreate",
        "required": [
          "title",
          "availableTime",
          "dueTime"
        ],
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string",
            "description": "(unique) url of the domain",
            "default": ""
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "title of the problem set"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string",
            "description": "content of the problem set",
            "default": ""
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean",
            "description": "whether the problem set is hidden",
            "default": false
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean",
            "description": "whether the scoreboard of the problem set is hidden",
            "default": false
          },
          "availableTime": {
            "title": "Availabletime",
            "type": "string",
            "format": "date-time"
          },
          "dueTime": {
            "title": "Duetime",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemSetEdit": {
        "title": "ProblemSetEdit",
        "type": "object",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "title": "Content",
            "maxLength": 65536,
            "type": "string"
          },
          "hidden": {
            "title": "Hidden",
            "type": "boolean"
          },
          "scoreboardHidden": {
            "title": "Scoreboardhidden",
            "type": "boolean"
          },
          "availableTime": {
            "title": "Availabletime",
            "type": "string",
            "format": "date-time"
          },
          "dueTime": {
            "title": "Duetime",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProblemSetList": {
        "title": "ProblemSetList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblemSet"
            },
            "default": []
          }
        }
      },
      "ProblemSetListResp": {
        "title": "ProblemSetListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemSetList"
          }
        }
      },
      "ProblemSetPermission": {
        "title": "ProblemSetPermission",
        "type": "object",
        "properties": {
          "create": {
            "title": "Create",
            "type": "boolean",
            "default": false
          },
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "viewHidden": {
            "title": "Viewhidden",
            "type": "boolean",
            "default": false
          },
          "claim": {
            "title": "Claim",
            "type": "boolean",
            "default": true
          },
          "scoreboard": {
            "title": "Scoreboard",
            "type": "boolean",
            "default": false
          },
          "manage": {
            "title": "Manage",
            "type": "boolean",
            "default": false
          },
          "edit": {
            "title": "Edit",
            "type": "boolean",
            "default": false
          },
          "viewConfig": {
            "title": "Viewconfig",
            "type": "boolean",
            "default": false
          }
        }
      },
      "ProblemSetResp": {
        "title": "ProblemSetResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ProblemSet"
          }
        }
      },
      "ProblemSolutionSubmit": {
        "title": "ProblemSolutionSubmit",
        "required": [
          "codeType",
          "file"
        ],
        "type": "object",
        "properties": {
          "codeType": {
            "$ref": "#/components/schemas/RecordCodeType"
          },
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Record": {
        "title": "Record",
        "type": "object",
        "properties": {}
      },
      "RecordCase": {
        "title": "RecordCase",
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordStatus"
              }
            ],
            "default": 0
          },
          "score": {
            "title": "Score",
            "type": "integer",
            "default": 0
          },
          "timeMs": {
            "title": "Timems",
            "type": "integer",
            "default": 0
          },
          "memoryKb": {
            "title": "Memorykb",
            "type": "integer",
            "default": 0
          },
          "executeStatus": {
            "title": "Executestatus",
            "type": "integer",
            "default": 0
          },
          "stdout": {
            "title": "Stdout",
            "type": "string",
            "default": ""
          },
          "stderr": {
            "title": "Stderr",
            "type": "string",
            "default": ""
          }
        }
      },
      "RecordCaseResult": {
        "title": "RecordCaseResult",
        "required": [
          "index",
          "result"
        ],
        "type": "object",
        "properties": {
          "index": {
            "title": "Index",
            "type": "integer"
          },
          "result": {
            "$ref": "#/components/schemas/RecordCase"
          }
        }
      },
      "RecordCodeType": {
        "title": "RecordCodeType",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "description": "An enumeration."
      },
      "RecordList": {
        "title": "RecordList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record"
            },
            "default": []
          }
        }
      },
      "RecordListResp": {
        "title": "RecordListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/RecordList"
          }
        }
      },
      "RecordPermission": {
        "title": "RecordPermission",
        "type": "object",
        "properties": {
          "view": {
            "title": "View",
            "type": "boolean",
            "default": true
          },
          "detail": {
            "title": "Detail",
            "type": "boolean",
            "default": false
          },
          "code": {
            "title": "Code",
            "type": "boolean",
            "default": false
          },
          "judge": {
            "title": "Judge",
            "type": "boolean",
            "default": false
          },
          "rejudge": {
            "title": "Rejudge",
            "type": "boolean",
            "default": false
          }
        }
      },
      "RecordResp": {
        "title": "RecordResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Record"
          }
        }
      },
      "RecordResult": {
        "title": "RecordResult",
        "required": [
          "status",
          "score",
          "timeMs",
          "memoryKb",
          "judgeAt"
        ],
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RecordStatus"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "timeMs": {
            "title": "Timems",
            "type": "integer"
          },
          "memoryKb": {
            "title": "Memorykb",
            "type": "integer"
          },
          "judgeAt": {
            "title": "Judgeat",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecordStatus": {
        "title": "RecordStatus",
        "enum": [
          0,
          20,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "description": "An enumeration."
      },
      "Score": {
        "title": "Score",
        "required": [
          "score",
          "time",
          "fullScore",
          "timeSpent",
          "tried"
        ],
        "type": "object",
        "properties": {
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "time": {
            "title": "Time",
            "type": "string",
            "format": "date-time"
          },
          "fullScore": {
            "title": "Fullscore",
            "type": "integer"
          },
          "timeSpent": {
            "title": "Timespent",
            "type": "number",
            "format": "time-delta"
          },
          "tried": {
            "title": "Tried",
            "type": "boolean"
          }
        }
      },
      "ScoreBoard": {
        "title": "ScoreBoard",
        "required": [
          "problemIds",
          "results"
        ],
        "type": "object",
        "properties": {
          "problemIds": {
            "title": "Problemids",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserScore"
            }
          }
        }
      },
      "ScoreBoardResp": {
        "title": "ScoreBoardResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/ScoreBoard"
          }
        }
      },
      "User": {
        "title": "User",
        "required": [
          "username",
          "email",
          "loginAt",
          "usernameLower",
          "emailLower"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "role": {
            "title": "Role",
            "type": "string",
            "default": "user"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "default": false
          },
          "registerIp": {
            "title": "Registerip",
            "type": "string",
            "default": "127.0.0.1"
          },
          "loginAt": {
            "title": "Loginat",
            "type": "string",
            "format": "date-time"
          },
          "loginIp": {
            "title": "Loginip",
            "type": "string",
            "default": "127.0.0.1"
          },
          "hashedPassword": {
            "title": "Hashedpassword",
            "type": "string",
            "default": ""
          },
          "usernameLower": {
            "title": "Usernamelower",
            "type": "string"
          },
          "emailLower": {
            "title": "Emaillower",
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserBase": {
        "title": "UserBase",
        "required": [
          "username",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "role": {
            "title": "Role",
            "type": "string",
            "default": "user"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserBaseList": {
        "title": "UserBaseList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserBase"
            },
            "default": []
          }
        }
      },
      "UserBaseListResp": {
        "title": "UserBaseListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserBaseList"
          }
        }
      },
      "UserBaseResp": {
        "title": "UserBaseResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserBase"
          }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "type": "object",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "oauth_name": {
            "title": "Oauth Name",
            "type": "string"
          },
          "oauth_account_id": {
            "title": "Oauth Account Id",
            "type": "string"
          }
        }
      },
      "UserDetail": {
        "title": "UserDetail",
        "required": [
          "username",
          "email",
          "loginAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "title": "Createdat",
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "title": "Updatedat",
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "gravatar": {
            "title": "Gravatar",
            "type": "string",
            "default": ""
          },
          "studentId": {
            "title": "Studentid",
            "type": "string",
            "default": ""
          },
          "realName": {
            "title": "Realname",
            "type": "string",
            "default": ""
          },
          "role": {
            "title": "Role",
            "type": "string",
            "default": "user"
          },
          "isActive": {
            "title": "Isactive",
            "type": "boolean",
            "default": false
          },
          "registerIp": {
            "title": "Registerip",
            "type": "string",
            "default": "127.0.0.1"
          },
          "loginAt": {
            "title": "Loginat",
            "type": "string",
            "format": "date-time"
          },
          "loginIp": {
            "title": "Loginip",
            "type": "string",
            "default": "127.0.0.1"
          }
        }
      },
      "UserDetailResp": {
        "title": "UserDetailResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserDetail"
          }
        }
      },
      "UserList": {
        "title": "UserList",
        "type": "object",
        "properties": {
          "count": {
            "title": "Count",
            "type": "integer",
            "default": 0
          },
          "results": {
            "title": "Results",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "default": []
          }
        }
      },
      "UserListResp": {
        "title": "UserListResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/UserList"
          }
        }
      },
      "UserResp": {
        "title": "UserResp",
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "errorMsg": {
            "title": "Errormsg",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "UserScore": {
        "title": "UserScore",
        "required": [
          "user",
          "totalScore",
          "totalTimeSpent",
          "scores"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserBase"
          },
          "totalScore": {
            "title": "Totalscore",
            "type": "integer"
          },
          "totalTimeSpent": {
            "title": "Totaltimespent",
            "type": "number",
            "format": "time-delta"
          },
          "scores": {
            "title": "Scores",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Score"
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Version": {
        "title": "Version",
        "required": [
          "version",
          "git"
        ],
        "type": "object",
        "properties": {
          "version": {
            "title": "Version",
            "type": "string"
          },
          "git": {
            "title": "Git",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
